# Manual Render Deployment Guide

## üöÄ Deploying Your MERN Stack on Render

Render is perfect for full-stack applications as you can deploy both frontend and backend on the same platform with great performance and easy setup.

## üìã Pre-Deployment Setup

### Step 1: Prepare Your Code for Git
```powershell
# Navigate to your project root
cd "E:\Login Systems"

# Initialize git if not already done
git init

# Add all files
git add .

# Commit your changes
git commit -m "Prepare for Render deployment"
```

### Step 2: Push to GitHub (Required for Render)
1. Create a new repository on GitHub
2. Add the remote and push:
```powershell
git remote add origin https://github.com/yourusername/mern-login-system.git
git branch -M main
git push -u origin main
```

---

## üñ•Ô∏è Backend Deployment on Render

### Step 1: Create Web Service
1. Go to https://render.com/
2. Sign up/Login (you can use GitHub)
3. Click "New +" ‚Üí "Web Service"
4. Connect your GitHub repository
5. Select your repository: `mern-login-system`

### Step 2: Configure Backend Service
- **Name**: `mern-login-backend`
- **Region**: Choose closest to your users
- **Branch**: `main`
- **Root Directory**: `backend`
- **Runtime**: `Node`
- **Build Command**: `npm install`
- **Start Command**: `npm start`

### Step 3: Set Environment Variables
In the "Environment Variables" section, add:

```
NODE_ENV=production
PORT=10000
MONGODB_URI=mongodb+srv://mdsaadmanfuad_db_user:login-systems@login-system.q8f6un2.mongodb.net/loginSystem?retryWrites=true&w=majority&appName=Login-System
JWT_SECRET=your_super_secure_jwt_secret_key_change_this_in_production_2025_render_deployment_secure
FRONTEND_URL=https://your-frontend-name.onrender.com
```

### Step 4: Advanced Settings
- **Auto-Deploy**: Yes
- **Instance Type**: Free (or paid for better performance)

### Step 5: Deploy Backend
1. Click "Create Web Service"
2. Wait for deployment (5-10 minutes)
3. Note your backend URL: `https://mern-login-backend.onrender.com`

---

## üåê Frontend Deployment on Render

### Step 1: Create Static Site
1. In Render dashboard, click "New +" ‚Üí "Static Site"
2. Connect the same GitHub repository
3. Select your repository: `mern-login-system`

### Step 2: Configure Frontend Service
- **Name**: `mern-login-frontend`
- **Branch**: `main`
- **Root Directory**: `frontend`
- **Build Command**: `npm install && npm run build`
- **Publish Directory**: `build`

### Step 3: Set Environment Variables
Add these environment variables:

```
REACT_APP_API_URL=https://mern-login-backend.onrender.com/api
REACT_APP_ENV=production
```

### Step 4: Deploy Frontend
1. Click "Create Static Site"
2. Wait for build and deployment
3. Your frontend will be available at: `https://mern-login-frontend.onrender.com`

---

## üîß Manual Deployment Steps (No GitHub)

If you prefer not to use GitHub, you can use Render's manual upload:

### Backend Manual Upload:
1. **Prepare backend files:**
```powershell
cd "E:\Login Systems\backend"
# Create a ZIP of all backend files including package.json, server.js, etc.
```

2. **Upload to Render:**
   - Go to Render dashboard
   - Click "New +" ‚Üí "Web Service"
   - Choose "Deploy from Git" ‚Üí "Public Git repository"
   - Or use file upload option if available

### Frontend Manual Upload:
1. **Build your React app:**
```powershell
cd "E:\Login Systems\frontend"
npm run build
```

2. **Upload build folder:**
   - Create ZIP of the `build` folder contents
   - Upload to Render Static Site service

---

## üîÑ Alternative: Single Repository Deployment

### Option 1: Monorepo Setup (Both frontend + backend)
Create this file structure for easier deployment:

```
render.yaml (in root directory):
```

<function_calls>
<invoke name="create_file">
<parameter name="content">services:
  - type: web
    name: mern-login-backend
    env: node
    region: oregon
    plan: free
    buildCommand: cd backend && npm install
    startCommand: cd backend && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: MONGODB_URI
        sync: false
      - key: JWT_SECRET
        sync: false
      - key: FRONTEND_URL
        sync: false

  - type: web
    name: mern-login-frontend
    env: static
    region: oregon
    plan: free
    buildCommand: cd frontend && npm install && npm run build
    staticPublishPath: frontend/build
    envVars:
      - key: REACT_APP_API_URL
        sync: false
      - key: REACT_APP_ENV
        value: production